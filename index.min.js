/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("express");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("mongoose");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(app){

	var customer = __webpack_require__(7)(app);
	
	var init = function(){

	};

	return {	
		init: init, 
		customer: customer,
	};
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var express 	= __webpack_require__(0);
var bodyparser  = __webpack_require__(4);

var model 		= __webpack_require__(5);
var routes 		= __webpack_require__(6);
var controller 	= __webpack_require__(2);

const app = express();

app.use(bodyparser.json()); 

app.use(express.static('src'));

model(app).init();
controller(app).init();
routes(app).init();

app.listen(8000);


/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("body-parser");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var mongoose = __webpack_require__(1);

module.exports = function(app){
	
	var init = function(){
		mongoose.connect('mongodb://localhost/customers');
	};
	
	return {
		init: init
	};
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



module.exports = function(app){

	var express  = __webpack_require__(0);
	var controller = __webpack_require__(2)(app);
	var router = express.Router();
	

	var init = function(){
		route();
	}

	var route = function(){

		app.use('/api/v1/', router);

		router.get('/customer', function(req,res){
			//res.send(JSON.stringify());
			controller.customer.viewCustomer({}, 0, 5, function(err, customerList){
				console.log(customerList);
				if(err){
					console.error(err.toString());
				}else{
					res.send(customerList);
					//res.render({customerList});
				}
			})
		})

		router.post('/customer', function(req, res){
		    var customerInfo = req.body;
		    console.log(customerInfo.name);
		    controller.customer.createCustomer(customerInfo, function(error, customer){
		    	if(error){
		    		//TODO:
		    		console.error(error.toString());
		    		res.send(500, error.toString());

		    	}else{
		    		//Render
		    		console.log('Customer Created')
		    	}	
		    })
		    
		});
	}

	return{
		init:init
	}
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var customer = __webpack_require__(8);

module.exports = function(app){
	
	var init = function(){
	
			
	};

	var createCustomer = function(customerInfo, callback){

		var newCustomer = new customer({
			name:customerInfo.name,
			description:customerInfo.description,
			status: customerInfo.status,
			createdOn: Date.now()
		});	
		
		newCustomer.save(callback);

	};			

	var viewCustomer  = function(filter, skip, limit, callback){
	    filter  = filter || {};
      	limit   = limit  || 10;
      	skip    = skip   || 0;

      	customer.find(filter).limit(limit).skip(skip).exec(callback);
	  }

	return {
		init: init,
		createCustomer:createCustomer,
		viewCustomer:viewCustomer
	}

};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var mongoose = __webpack_require__(1);

var customerSchema = mongoose.Schema({
   		name        : String,
   		status		: String,
   		description : String,
   		createdOn   : Date
	});

module.exports = mongoose.model("customer", customerSchema);

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,